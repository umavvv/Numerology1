package com.example.boot.model;

import org.telegram.telegrambots.meta.api.objects.Message;


import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class Debt {
    String res;
    // Получен сектор Debt
    public String getDebt(Message message) {

        LocalDate localDate = LocalDate.parse(message.getText());
        //Избавляемя от лишнего символа
        String replace = String.valueOf(localDate).replace("-", "");
        int num1 = Integer.parseInt(replace);

        //1 этап Суммируем все числа даты рождения. Для примера возьмем 1998-01-05: 1+9+9+8+0+1+0+5=33
        int sum;
        for (sum = 0; num1 > 0; num1 /= 10) {
            sum += num1 % 10;
        }
        //2 этап Еще раз суммируем числа с ответа первого этапа 3+3=6
        int num2 = sum;
        int sum2;
        for (sum2 = 0; num2 > 0; num2 /= 10) {
            sum2 += num2 % 10;
        }
       /*Получаем день рождение 05 и избавляемся от 0 так как в дальнейшем при умножении
        может дать 0 а это нам не нужно
       */
        String replace2 = String.valueOf(localDate.getDayOfMonth()).replace("0", "");
        /*3 этап Здесь берем число под индексом 0 тоесть 5 так как мы избавились от 0 даже если будет
         двух значное число мы всегда берем первое число
         */
        String replaceResult = String.valueOf(replace2.charAt(0));
        /*Этап 4 Вычитаем  число из первого этапа числа:
        33-(2*на первую цифру даты рождения тоесть 5 взятую из 3-го этапа)Например
        33-(2*5)=23
         */
        int re = Integer.parseInt(replaceResult);
        int sum3 = sum - 2 * re;
        int num = sum3;

        //Этап 5 суммируем числа между собой из4-го этапа 2+3=5
        int sum4;
        for (sum4 = 0; num > 0; num /= 10) {
            sum4 += num % 10;

        }
        // Этап 6 добавляем все полученное в лист
        List<Integer> list = new ArrayList();
        list.add(Integer.valueOf(replace));
        list.add(sum);
        list.add(sum2);
        list.add(sum3);
        list.add(sum4);
        //Этап 7 Убираем все лишнее что бы остались только числа но кроме 0
        String sector = list.toString().replace(",", "")
                .replace(" ", "").replace("[", "")
                .replace("]", "").replace("0", "");
        // В итоге получаем 199815336235, это числа для дальнейшего разделения на сектора

        String debt = sector.replace("1", "")
                .replace("2", "")
                .replace("3", "")
                .replace("4", "")
                .replace("5", "")
                .replace("6", "")
                .replace("7", "")
                .replace("9", "");
        if (debt.equals("8")) {
            res = "У вас сектор долг 8/пуст.\nЧеловек с таким коэффициентом держит дистанцию, умеет любить, однако имеет очень узкий круг близких. " +
                    "Он не реагирует на слово «должен» (потому что нет основы и ничего не отзывается в нем), тяжело переживает неудачи, боится " +
                    "сложностей и не любит рутину. Такой человек принимает больше, чем отдает. Для него также характерно отрицание смерти, болезни " +
                    "и своих сложных качеств. В проблемах склонен винить обстоятельства, а не себя. Люди со слабым сектором «Долг» способны подвести," +
                    "не выполнить задание, затянуть дело. Среди других качеств такого типа – нетерпеливость, инфантильность, гибкость в высказываниях, " +
                    "страх перед ответственностью и дистанцирование от чужих проблем.";
            return res;
        }if (debt.equals("88")||debt.equals("888")) {
            res = "У вас сектор долг 88/888.\n Сильный сектор говорит о строгости, правильности и доброте. Люди с двумя восьмерками в матрице знают, " +
                    "как заботиться, способны любить большое количество людей, умеют делиться и говорить правду. Они оперативно реагируют на просьбы, " +
                    "стараются понимать поведение и поступки партнера, терпеливы, патриотичны и религиозны." +
                    "Люди с таким коэффициентом умеют решать проблемы других, стремятся быть в коллективе. При этом не чувствуют дистанцию, тяжело " +
                    "делегируют полномочия и отбирают ответственность у близких. Им свойственны гиперопека и давление на окружающих." +
                    "Такие люди бывают строги, но не жестоки. В проблемах винят себя, а не обстоятельства.";
            return res;
        }if (debt.equals("8888")||debt.equals("88888")||debt.equals("888888")||debt.equals("8888888")||debt.equals("88888888")||debt.equals("888888888")) {
            res = "У вас сектор долг 8888/88888 и более.\n Неоднозначный коэффициент, который проявляет себя непредсказуемо. " +
                    "Возможна фанатичность, религиозность, желание сделать что-то великое; влюбчивость вопреки сильной ответственности, " +
                    "паталогическая любовь к матери или родителям." +
                    "В «рафинированных», излишне комфортных условиях проявит себя как пустой сектор.";
            return res;
        }
        else
            res= "У вас сектор долг 8/пуст.\nЧеловек с таким коэффициентом держит дистанцию, умеет любить, однако имеет очень узкий круг близких. " +
                    "Он не реагирует на слово «должен» (потому что нет основы и ничего не отзывается в нем), тяжело переживает неудачи, боится " +
                    "сложностей и не любит рутину. Такой человек принимает больше, чем отдает." +
                    "Для него также характерно отрицание смерти, болезни и своих сложных качеств. В проблемах склонен винить обстоятельства, а не себя." +
                    "Люди со слабым сектором «Долг» способны подвести, не выполнить задание, затянуть дело. Среди других качеств такого типа – " +
                    "нетерпеливость, инфантильность, гибкость в высказываниях, страх перед ответственностью и дистанцирование от чужих проблем.";
        return res;
    }
}
